# -*-python-*-
from rsdockerspawner import rsdockerspawner
import binascii

c.Authenticator.admin_users = set([{{ jupyterhub.admin_users_str }}])
{% if 'github' in jupyterhub %}
import oauthenticator
c.JupyterHub.authenticator_class = oauthenticator.GitHubOAuthenticator
c.GitHubOAuthenticator.client_id = '{{ jupyterhub.github.client_id }}'
c.GitHubOAuthenticator.client_secret = '{{ jupyterhub.github.client_secret }}'
c.GitHubOAuthenticator.oauth_callback_url = 'https://{{ jupyterhub.vhost }}/hub/oauth_callback'
{% else %}
assert '{{ rsconf_db.channel }}' == 'dev', \
    'development only; all other channels must use GitHubOAuthenticator'
import jupyterhub.auth
class _Auth(jupyterhub.auth.Authenticator):
    async def authenticate(self, handler, data):
        if data['password'] == '{{ jupyterhub.mock_password }}':
            return data['username']
        return None
c.JupyterHub.authenticator_class = _Auth
{% endif %}
c.JupyterHub.cleanup_servers = False
#TODO(robnagler) DEPRECATED remove after prod release
c.JupyterHub.confirm_no_ssl = True
c.JupyterHub.cookie_secret = binascii.a2b_hex('{{ jupyterhub.cookie_secret_hex }}')
c.ConfigurableHTTPProxy.api_url = 'http://{{ jupyterhub.hub_ip }}:{{ jupyterhub.configurable_http_proxy_api_port }}'
c.JupyterHub.hub_ip = '{{ jupyterhub.hub_ip }}'
c.JupyterHub.ip = '{{ jupyterhub.hub_ip }}'
c.JupyterHub.port = {{ jupyterhub.configurable_http_proxy_port }}
c.JupyterHub.hub_port = {{ jupyterhub.api_port }}
c.JupyterHub.template_vars = {{ jupyterhub.template_vars }}
c.JupyterHub.upgrade_db = True
c.ConfigurableHTTPProxy.auth_token = '{{ jupyterhub.proxy_auth_token }}'
c.DockerSpawner.http_timeout = {{ jupyterhub.http_timeout }}
# https://github.com/radiasoft/rsconf/issues/54
c.DockerSpawner.image_whitelist = []
c.DockerSpawner.image = '{{ jupyterhub.jupyter_docker_image }}'
c.DockerSpawner.use_internal_ip = True
c.DockerSpawner.network_name = 'host'
c.RSDockerSpawner.cfg = '''{{ jupyterhub.rsdockerspawner_cfg }}'''
c.JupyterHub.spawner_class = rsdockerspawner.RSDockerSpawner
if hasattr(rsdockerspawner.RSDockerSpawner, 'sirepo_template_dir'):
    c.JupyterHub.template_paths = [rsdockerspawner.RSDockerSpawner.sirepo_template_dir()]
# Relevant default values from jupyter
# https://github.com/jupyterhub/jupyterhub/blob/909b3ad4d708a7369343c8a8537c95c05aae3b67/jupyterhub/spawner.py#L433
# In addition, values specific for our environment
c.Spawner.env_keep = [
    'JUPYTERHUB_SINGLEUSER_APP',
    'LANG',
    'LC_ALL',
    'LD_LIBRARY_PATH',
    'PATH',
    'PKG_CONFIG_PATH'
    'PYTHONPATH',
    'VIRTUAL_ENV',
]
#c.Application.log_level = 'DEBUG'
# Might not want this, but for now it's useful to see everything
#c.JupyterHub.debug_db = True
#c.ConfigurableHTTPProxy.debug = True
#c.JupyterHub.log_level = 'DEBUG'
#c.LocalProcessSpawner.debug = True
#c.Spawner.debug = True
