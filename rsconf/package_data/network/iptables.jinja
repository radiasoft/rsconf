*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
{% for n in network.blocked_ips %}
    -A INPUT -s {{ n }} -j DROP
{% endfor %}
{# https://serverfault.com/a/84981 To make it even harder to learn
 # about this, many common firewall books say "block ICMP" -- it's
 # clear their authors have never read an RFC or had to solve issues
 # surrounding such advice. It's bad advice to block all ICMP.
 #
 # PCI compliance requires dropping timestamp requests
 #}
-A INPUT -p icmp --icmp-type timestamp-request -j DROP
-A INPUT -p icmp -j ACCEPT
{# https://unix.stackexchange.com/a/108186
 # found this thread from the netfilter@vger.kernel.org netfilte/iptables
 # discussions, titled: state match is obsolete 1.4.17, which pretty much
 # says that state is just an alias to conntrack so it doesn't really
 # matter which you use, in both circumstances you're using conntrack.
 #}
{% for d in network.private_devs %}
    -A INPUT -i {{ d }} -j ACCEPT
{% endfor %}
-A INPUT -i {{ network.inet_dev.name }} -m state --state RELATED,ESTABLISHED -j ACCEPT
{% if network.public_tcp_ports %}
    -A INPUT -i {{ network.inet_dev.name }} -p tcp -m state --state NEW -m tcp --match multiport --dports {{ network.public_tcp_ports | join(',') }} -j ACCEPT
{% endif %}
{% if network.trusted_tcp_ports %}
    {% for n in network.trusted_public_nets %}
        -A INPUT -i {{ network.inet_dev.name }} -s {{ n }} -p tcp -m state --state NEW -m tcp --match multiport --dports {{ network.trusted_tcp_ports | join(',') }} -j ACCEPT
    {% endfor %}
{% endif %}
{% if network.public_udp_ports %}
    -A INPUT -i {{ network.inet_dev.name }} -p udp --match multiport --dports {{ network.public_udp_ports | join (',') }} -j ACCEPT
{% endif %}
{% for p in network.restricted_public_tcp_ports %}
    {% for n in network.restricted_public_tcp_ports[p] %}
        -A INPUT -i {{ network.inet_dev.name }} -s {{ n }} -p tcp -m state --state NEW -m tcp --dport {{ p }}  -j ACCEPT
    {% endfor %}
{% endfor %}
-A INPUT -i {{ network.inet_dev.name }} -m state --state INVALID -j REJECT --reject-with icmp-port-unreachable
-A INPUT -i {{ network.inet_dev.name }} -p tcp -m tcp --tcp-flags SYN,RST,ACK ACK -m state --state NEW -j REJECT --reject-with tcp-reset
-A INPUT -i {{ network.inet_dev.name }} -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j REJECT --reject-with icmp-port-unreachable
-A INPUT -i {{ network.inet_dev.name }} -p tcp -m tcp --tcp-option 128 -j REJECT --reject-with icmp-port-unreachable

{# ssh: Accept our networks always #}
{% for n in network.trusted_public_nets %}
    {% set s = ([ 22 ] + network.public_ssh_ports)|unique|join(',') %}
    -A INPUT -i {{ network.inet_dev.name }} -s {{ n }} -p tcp -m tcp --match multiport --dports {{ s }} -j ACCEPT
{% endfor %}
{% if network.public_ssh_ports %}
    {% set s = '-A INPUT -i ' + network.inet_dev.name + ' -p tcp -m state --state NEW -m tcp --match multiport --dports ' +  (network.public_ssh_ports|join(',')) %}
    {# uses a /24 mask, because we don't want many connections from the same network #}
{% if network.drop_ssh_probes %}
    {{ s }} -m recent --set --name SSHPROBES --mask 255.255.255.0 --rsource
    {{ s }} -m recent --update --seconds 180 --hitcount 6 --name SSHPROBES --mask 255.255.255.0 --rsource -j DROP
{% endif %}
    {{ s }} -j ACCEPT
{% endif %}
-A INPUT -j REJECT --reject-with icmp-port-unreachable

{% if network.nat_input_dev %}
    -A FORWARD -i {{ network.nat_output_dev.name }} -m state --state INVALID -j REJECT --reject-with icmp-port-unreachable
    -A FORWARD -i {{ network.nat_output_dev.name }} -o {{ network.nat_input_dev.name }} -m state --state RELATED,ESTABLISHED -j ACCEPT
    -A FORWARD -i {{ network.nat_output_dev.name }} -j REJECT --reject-with icmp-host-prohibited
    -A FORWARD -i {{ network.nat_input_dev.name }} -o {{ network.nat_output_dev.name }} -j ACCEPT
    -A FORWARD -j REJECT --reject-with icmp-host-prohibited
{# COMMIT can't begin with whitespace #}
COMMIT
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
    {# limit source addresses https://serverfault.com/a/511590 #}
    -A POSTROUTING -s {{ network.nat_input_dev.net.name }} -o {{ network.nat_output_dev.name }} -j MASQUERADE
{% else %}
    -A FORWARD -j REJECT --reject-with icmp-host-prohibited
{% endif %}
COMMIT
