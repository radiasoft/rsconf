#!/bin/bash

network_firewalld_disable() {
    if [[ $(systemctl is-active firewalld) == active ]]; then
        systemctl stop firewalld
    fi
    systemctl disable firewalld >& /dev/null || true
    systemctl mask firewalld >& /dev/null || true
}

network_iptables_enable() {
    if [[ $(systemctl is-active iptables 2>&1 || true) == active ]]; then
        # Just in case, make sure enabled
        systemctl enable iptables
        return
    fi
    rsconf_yum_install iptables-services
    if [[ ${rsconf_service_no_restart:-} ]]; then
        return
    fi
    systemctl enable iptables
    systemctl start iptables
}

network_main() {
    network_firewalld_disable
    {{ network.main_function_calls }}
}

network_manager_disable() {
    if [[ $(systemctl is-active NetworkManager) == active ]]; then
        systemctl stop NetworkManager
    fi
    systemctl disable NetworkManager >& /dev/null || true
}

network_manager_enable() {
    rsconf_yum_install NetworkManager
    # enable happens in rsconf_systemctl
}

{% if not network.use_network_scripts %}
rsconf_systemctl_restart_NetworkManager() {
    nmcli connection reload
    {% for d in network.devices %}
    nmcli device reapply {{ d }}
    {% endfor %}
}
{% endif %}
