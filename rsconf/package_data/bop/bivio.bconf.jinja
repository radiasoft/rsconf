# -*-perl-*-
use {{ bop.perl_root }}::BConf;

my($env_bool) = sub {
    my($bool, $default) = @_;
    return ! exists($ENV{$bool}) ? $default
        : $ENV{$bool} ? 1 : 0;
};

{{ bop.perl_root }}::BConf->merge_dir({
    'Bivio::Agent::Request' => {
        can_secure => {{ bop.can_secure | int }},
    },
    {% if bop.is_test %}
        'Bivio::Biz::Action::AssertClient' => {
            # do not include localhost, because if there's a bug in the proxy, it will fail.
            # It is only for test so should only be btest.client_host.
            hosts => [qw({{ btest.client_host }})],
        },
    {% endif %}
    'Bivio::Biz::File' => {
        root => '{{ bop.db_d }}',
        backup_root => '{{ bop.bkp_d }}',
    },
    'Bivio::Biz::Model::CRMForm' => {
        want_status_email => {{ bop.want_status_email | int }},
    },
    'Bivio::Biz::Model::MailReceiveDispatchForm' => {
        {% if bop.filter_out_of_office is defined %}
        filter_out_of_office => {{ bop.filter_out_of_office | int }},
        {% endif %}
        {% if bop.filter_spam is defined %}
        filter_spam => {{ bop.filter_spam | int }},
        {% endif %}
    },
    'Bivio::Delegate::Cookie' => {
        tag => '{{ bop.cookie_tag }}',
    },
    'Bivio::Ext::DBI' => {
        password => '{{ bop.dbi_password }}',
        dbms => {
            password => '{{ postgresql.postgres_password }}',
        },
        template1 => {
            password => '{{ postgresql.postgres_password }}',
        },
    },
    'Bivio::IO::Alert' => {
        want_pid => $env_bool->('BIVIO_IO_ALERT_WANT_PID', 1),
        want_time => $env_bool->('BIVIO_IO_ALERT_WANT_TIME', 1),
    },
    'Bivio::IO::Config' => {
        is_production => {{ bop.is_production | int }},
    },
    'Bivio::IO::Log' => {
        directory => '{{ bop.logbop_d }}',
    },
    {% if bop.is_test %}
        'Bivio::Test::Language::HTTP' => {
            email_user => '{{ btest.email_user }}',
            home_page_uri => '{{ bop.home_page_uri }}',
            local_mail_host => '{{ btest.client_host }}',
        },
    {% endif %}
    'Bivio::Type::Secret' => {
        algorithm => '{{ bop.secret.algorithm }}',
        key => pack('h*', '{{ bop.secret.key_hex }}'),
        magic => '{{ bop.secret.magic }}',
    },
    'Bivio::UI::Facade' => {
        local_file_root => '{{ bop.local_file_root_d }}',
        want_local_file_cache => 1,
        {% if bop.is_test %}
            http_host => '{{ bop.http_host }}',
            mail_host => '{{ bop.mail_host }}',
        {% endif %}
    },
    'Bivio::UI::HTML::Widget::SourceCode' => {
        source_dir => '{{ bop.source_code_d }}',
    },
    'Bivio::Util::HTTPLog' => {
        error_file => '{{ bop.log_d }}/error_log',
        # avoid spambots
        email => join('@', 'errors', 'bivio.biz'),
        pager_email => join('@', 'critical-errors', 'bivio.biz'),
    },
    'Bivio::Util::HTTPStats' => {
        log_base => '{{ bop.log_d }}',
    },
{{ bop.bconf_aux }}
});
