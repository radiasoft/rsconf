{#TODO(robnagler) https://linode.com/docs/web-servers/nginx/configure-nginx-for-optimized-performance/ #}
user nginx;
worker_processes {{ nginx.worker_processes }};
error_log /var/log/nginx/error.log info;
pid /run/nginx.pid;

events {
    {# This is the absolute maximum #}
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    log_format main '$http_host $remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log  main;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    {# http://www.techrepublic.com/article/how-to-configure-gzip-compression-with-nginx/
     https://www.nginx.com/resources/admin-guide/compression-and-decompression/
    #}
    gzip on;
    {# gzip_proxied no-cache no-store private expired auth;
     256 bytes of nginx.conf gzips to 194, seems reasonable
    #}
    gzip_min_length 256;
    {# We don't cache much so just gzip everything #}
    gzip_proxied any;
    gzip_vary on;
    {# https://mattstauffer.com/blog/enabling-gzip-on-nginx-servers-including-laravel-forge/ #}
    gzip_comp_level 5;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        application/xml+rss
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/javascript
        text/plain
        text/x-component
        text/xml
        ;
    {# https://t37.net/nginx-optimization-understanding-sendfile-tcp_nodelay-and-tcp_nopush.html #}
    sendfile on;
    server_tokens off;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    ssl_prefer_server_ciphers on;
    {# Cloudflare "Compatible" ciphers list https://developers.cloudflare.com/ssl/reference/cipher-suites/recommendations/ #}
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_protocols TLSv1.2;
{#    ssl_session_cache shared:SSL:1m;

#    # https://cipherli.st/
#    ssl_protocols TLSv1.2;
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#    ssl_ecdh_curve secp384r1;
#}
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    {#
      This will be output on self-signed certs
      [warn] "ssl_stapling" ignored, issuer certificate not found
    #}
    ssl_stapling on;
    ssl_stapling_verify on;
{#TODO(robnagler) Is this necessary?
#    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
#    add_header X-Frame-Options DENY;
#    add_header X-Content-Type-Options nosniff;
#}
    proxy_http_version 1.1;
    {# https://www.kb.cert.org/vuls/id/797896 #}
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_connect_timeout 600s;
    proxy_redirect off;
    {# security: use $host, not $http_host, because it is what is configured not,
    what is passed in the Host: header, which is supplied by the remote. #}
    proxy_set_header Host $host;
    {# https://www.kb.cert.org/vuls/id/797896 #}
    proxy_set_header Proxy "";
    {# "Old school" for logs in wordpress #}
    proxy_set_header Via $remote_addr;
    {# tornado, used by jupyterhub, gives X-Real-Ip precendence over X-Forwarded-For
       so we set that, since there's some code about "trusted_downstream" which we
       don't want to configure. #}
    proxy_set_header X-Real-Ip $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    server {
        {#
          "listen 443 default server" is not the default server
          for explicit IPs in vhosts. Therefore, we have to list out
          all the explicit IPs. We do not have that but we do have the
          public_ip and can use that along with the global default
          listen directive.
          TODO(robnagler) add the IP of all the hosts installed in
              conf.d so we can list them here. install_vhost should
              do more work.
        #}
        listen 80 default_server;
        {% if nginx.public_ip %}
            listen {{ nginx.public_ip }}:80 default_server;
        {% endif %}
        server_name "";
        {% if "default_server_tls" in nginx %}
            listen 443 ssl default_server;
            {% if nginx.public_ip %}
                listen {{ nginx.public_ip }}:443 ssl default_server;
            {% endif %}
            ssl_certificate {{ nginx.default_server_tls.crt }};
            ssl_certificate_key {{ nginx.default_server_tls.key }};
        {% endif %}
        return 444;
    }
    {{ nginx.rendered_redirects | indent(4, first=False) }}
    include /etc/nginx/conf.d/*.conf;
}
