#!/bin/bash
set -eou pipefail

vm_devbox_first_start() {
    if [[ -e Vagrantfile ]]; then
        return
    fi
    curl '{{ rsconf_db.installers_url }}' | vagrant_dev_private_net= \
        vagrant_dev_provision_eth1= \
        vagrant_dev_no_mounts=1 \
        vagrant_dev_no_nfs_src=1 \
        vagrant_dev_no_vbguest=1 \
        bash -s vagrant-sirepo-dev
}

vm_devbox_set_forwarded_port() {
    declare r=
    if ! grep -q 'forwarded_port' Vagrantfile; then
        perl -pi -e 's{^\s*(config.vm.hostname.*)$}{$1\nconfig.vm.network "forwarded_port", guest: {{ this.ssh_port }}, host: {{ this.ssh_port }}}' Vagrantfile
        r=1
    elif ! grep -q 'guest: {{ this.ssh_port }}, host: {{ this.ssh_port }}' Vagrantfile; then
        perl -pi -e 's{^\s*config.vm.network "forwarded_port"}{config.vm.network "forwarded_port", guest: {{ this.ssh_port }}, host: {{ this.ssh_port }}}' Vagrantfile
        r=1
    fi
    if [[ ${r:-} ]]; then
        vagrant reload
    fi
}

vm_devbox_set_ssh_config() {
    if ! vagrant status | grep -q running; then
        vagrant up
    fi
    vagrant ssh <<'EOF'
sudo bash -s <<'EOF_BASH'
set -eou pipefail

install --mode=400 --owner=root --group=root /dev/stdin /etc/sshd_config<<EOF_INSTALL
# DO NOT EDIT THIS FILE
# MANAGED BY RSCONF

# Keep vagrant ssh working
Include /etc/ssh/sshd_config.d/*.conf
ListenAddress 0.0.0.0:22

HostKey {{ this.ssh_guest_host_key_f }}
ListenAddress 0.0.0.0:{{ this.ssh_port }}

AuthorizedKeysFile .ssh/authorized_keys
PasswordAuthentication no
Protocol 2
X11Forwarding yes
EOF_INSTALL

echo '{{ this.ssh_identity_pub_key }}' >> '/home/{{ this.run_u }}/.ssh/authorized_keys'

install --mode=400 --owner=root --group=root /dev/stdin "{{ this.ssh_guest_host_key_f }}"<<EOF_INSTALL
{{ this.ssh_host_key }}
EOF_INSTALL

sshd -t
systemctl restart sshd
EOF_BASH
EOF
}

cd {{ this.vm_d }}
vm_devbox_create_vm
vm_devbox_set_forwarded_port
vm_devbox_set_ssh_config
